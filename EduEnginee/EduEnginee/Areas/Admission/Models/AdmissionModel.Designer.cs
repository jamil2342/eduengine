//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("AdmissionDbModel", "FK_AdmissionTypeCircular", "AdmissionTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EduEnginee.Areas.Admission.Models.AdmissionType), "Circulars", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduEnginee.Areas.Admission.Models.Circular), true)]
[assembly: EdmRelationshipAttribute("AdmissionDbModel", "FK_CircularComment", "Circulars", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduEnginee.Areas.Admission.Models.Circular), "Comments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduEnginee.Areas.Admission.Models.Comment), true)]
[assembly: EdmRelationshipAttribute("AdmissionDbModel", "FK_CircularSubject", "Circulars", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduEnginee.Areas.Admission.Models.Circular), "Subjects", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduEnginee.Areas.Admission.Models.Subject), true)]
[assembly: EdmRelationshipAttribute("AdmissionDbModel", "FK_InstituteCircular", "Institutes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduEnginee.Areas.Admission.Models.Institute), "Circulars", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduEnginee.Areas.Admission.Models.Circular), true)]
[assembly: EdmRelationshipAttribute("AdmissionDbModel", "FK_InstituteComment", "Institutes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EduEnginee.Areas.Admission.Models.Institute), "Comments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduEnginee.Areas.Admission.Models.Comment), true)]
[assembly: EdmRelationshipAttribute("AdmissionDbModel", "FK_CountryInstitute", "Countries", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EduEnginee.Areas.Admission.Models.Country), "Institutes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduEnginee.Areas.Admission.Models.Institute), true)]
[assembly: EdmRelationshipAttribute("AdmissionDbModel", "FK_InstituteCataryInstituteSubcatary", "InstituteCataries", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduEnginee.Areas.Admission.Models.InstituteCatary), "InstituteSubcataries", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduEnginee.Areas.Admission.Models.InstituteSubcatary), true)]
[assembly: EdmRelationshipAttribute("AdmissionDbModel", "FK_InstituteTypeInstituteCatary", "InstituteTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduEnginee.Areas.Admission.Models.InstituteType), "InstituteCataries", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduEnginee.Areas.Admission.Models.InstituteCatary), true)]
[assembly: EdmRelationshipAttribute("AdmissionDbModel", "FK_InstituteNews", "Institutes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduEnginee.Areas.Admission.Models.Institute), "News", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduEnginee.Areas.Admission.Models.News), true)]
[assembly: EdmRelationshipAttribute("AdmissionDbModel", "FK_InstituteNotice", "Institutes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduEnginee.Areas.Admission.Models.Institute), "Notices", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduEnginee.Areas.Admission.Models.Notice), true)]
[assembly: EdmRelationshipAttribute("AdmissionDbModel", "FK_InstituteSubcataryInstitute", "InstituteSubcataries", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduEnginee.Areas.Admission.Models.InstituteSubcatary), "Institutes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduEnginee.Areas.Admission.Models.Institute), true)]

#endregion

namespace EduEnginee.Areas.Admission.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class AdmissionDbEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new AdmissionDbEntities object using the connection string found in the 'AdmissionDbEntities' section of the application configuration file.
        /// </summary>
        public AdmissionDbEntities() : base("name=AdmissionDbEntities", "AdmissionDbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AdmissionDbEntities object.
        /// </summary>
        public AdmissionDbEntities(string connectionString) : base(connectionString, "AdmissionDbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AdmissionDbEntities object.
        /// </summary>
        public AdmissionDbEntities(EntityConnection connection) : base(connection, "AdmissionDbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AdmissionType> AdmissionTypes
        {
            get
            {
                if ((_AdmissionTypes == null))
                {
                    _AdmissionTypes = base.CreateObjectSet<AdmissionType>("AdmissionTypes");
                }
                return _AdmissionTypes;
            }
        }
        private ObjectSet<AdmissionType> _AdmissionTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Circular> Circulars
        {
            get
            {
                if ((_Circulars == null))
                {
                    _Circulars = base.CreateObjectSet<Circular>("Circulars");
                }
                return _Circulars;
            }
        }
        private ObjectSet<Circular> _Circulars;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Comment> Comments
        {
            get
            {
                if ((_Comments == null))
                {
                    _Comments = base.CreateObjectSet<Comment>("Comments");
                }
                return _Comments;
            }
        }
        private ObjectSet<Comment> _Comments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Country> Countries
        {
            get
            {
                if ((_Countries == null))
                {
                    _Countries = base.CreateObjectSet<Country>("Countries");
                }
                return _Countries;
            }
        }
        private ObjectSet<Country> _Countries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InstituteCatary> InstituteCataries
        {
            get
            {
                if ((_InstituteCataries == null))
                {
                    _InstituteCataries = base.CreateObjectSet<InstituteCatary>("InstituteCataries");
                }
                return _InstituteCataries;
            }
        }
        private ObjectSet<InstituteCatary> _InstituteCataries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Institute> Institutes
        {
            get
            {
                if ((_Institutes == null))
                {
                    _Institutes = base.CreateObjectSet<Institute>("Institutes");
                }
                return _Institutes;
            }
        }
        private ObjectSet<Institute> _Institutes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InstituteSubcatary> InstituteSubcataries
        {
            get
            {
                if ((_InstituteSubcataries == null))
                {
                    _InstituteSubcataries = base.CreateObjectSet<InstituteSubcatary>("InstituteSubcataries");
                }
                return _InstituteSubcataries;
            }
        }
        private ObjectSet<InstituteSubcatary> _InstituteSubcataries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InstituteType> InstituteTypes
        {
            get
            {
                if ((_InstituteTypes == null))
                {
                    _InstituteTypes = base.CreateObjectSet<InstituteType>("InstituteTypes");
                }
                return _InstituteTypes;
            }
        }
        private ObjectSet<InstituteType> _InstituteTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<News> News
        {
            get
            {
                if ((_News == null))
                {
                    _News = base.CreateObjectSet<News>("News");
                }
                return _News;
            }
        }
        private ObjectSet<News> _News;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Notice> Notices
        {
            get
            {
                if ((_Notices == null))
                {
                    _Notices = base.CreateObjectSet<Notice>("Notices");
                }
                return _Notices;
            }
        }
        private ObjectSet<Notice> _Notices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Subject> Subjects
        {
            get
            {
                if ((_Subjects == null))
                {
                    _Subjects = base.CreateObjectSet<Subject>("Subjects");
                }
                return _Subjects;
            }
        }
        private ObjectSet<Subject> _Subjects;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagram>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AdmissionTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdmissionTypes(AdmissionType admissionType)
        {
            base.AddObject("AdmissionTypes", admissionType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Circulars EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCirculars(Circular circular)
        {
            base.AddObject("Circulars", circular);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Comments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToComments(Comment comment)
        {
            base.AddObject("Comments", comment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Countries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountries(Country country)
        {
            base.AddObject("Countries", country);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InstituteCataries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInstituteCataries(InstituteCatary instituteCatary)
        {
            base.AddObject("InstituteCataries", instituteCatary);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Institutes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInstitutes(Institute institute)
        {
            base.AddObject("Institutes", institute);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InstituteSubcataries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInstituteSubcataries(InstituteSubcatary instituteSubcatary)
        {
            base.AddObject("InstituteSubcataries", instituteSubcatary);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InstituteTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInstituteTypes(InstituteType instituteType)
        {
            base.AddObject("InstituteTypes", instituteType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the News EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNews(News news)
        {
            base.AddObject("News", news);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Notices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNotices(Notice notice)
        {
            base.AddObject("Notices", notice);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Subjects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubjects(Subject subject)
        {
            base.AddObject("Subjects", subject);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagram sysdiagram)
        {
            base.AddObject("sysdiagrams", sysdiagram);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AdmissionDbModel", Name="AdmissionType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AdmissionType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AdmissionType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        public static AdmissionType CreateAdmissionType(global::System.Int32 id, global::System.String title)
        {
            AdmissionType admissionType = new AdmissionType();
            admissionType.Id = id;
            admissionType.Title = title;
            return admissionType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdmissionDbModel", "FK_AdmissionTypeCircular", "Circulars")]
        public EntityCollection<Circular> Circulars
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Circular>("AdmissionDbModel.FK_AdmissionTypeCircular", "Circulars");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Circular>("AdmissionDbModel.FK_AdmissionTypeCircular", "Circulars", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AdmissionDbModel", Name="Circular")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Circular : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Circular object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="instituteId">Initial value of the InstituteId property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        public static Circular CreateCircular(global::System.Int32 id, global::System.Int32 instituteId, global::System.String title)
        {
            Circular circular = new Circular();
            circular.Id = id;
            circular.InstituteId = instituteId;
            circular.Title = title;
            return circular;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstituteId
        {
            get
            {
                return _InstituteId;
            }
            set
            {
                OnInstituteIdChanging(value);
                ReportPropertyChanging("InstituteId");
                _InstituteId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstituteId");
                OnInstituteIdChanged();
            }
        }
        private global::System.Int32 _InstituteId;
        partial void OnInstituteIdChanging(global::System.Int32 value);
        partial void OnInstituteIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] SeatPlan
        {
            get
            {
                return StructuralObject.GetValidValue(_SeatPlan);
            }
            set
            {
                OnSeatPlanChanging(value);
                ReportPropertyChanging("SeatPlan");
                _SeatPlan = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SeatPlan");
                OnSeatPlanChanged();
            }
        }
        private global::System.Byte[] _SeatPlan;
        partial void OnSeatPlanChanging(global::System.Byte[] value);
        partial void OnSeatPlanChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Result
        {
            get
            {
                return StructuralObject.GetValidValue(_Result);
            }
            set
            {
                OnResultChanging(value);
                ReportPropertyChanging("Result");
                _Result = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Result");
                OnResultChanged();
            }
        }
        private global::System.Byte[] _Result;
        partial void OnResultChanging(global::System.Byte[] value);
        partial void OnResultChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ResultLink
        {
            get
            {
                return _ResultLink;
            }
            set
            {
                OnResultLinkChanging(value);
                ReportPropertyChanging("ResultLink");
                _ResultLink = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ResultLink");
                OnResultLinkChanged();
            }
        }
        private global::System.String _ResultLink;
        partial void OnResultLinkChanging(global::System.String value);
        partial void OnResultLinkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SeatPlanLink
        {
            get
            {
                return _SeatPlanLink;
            }
            set
            {
                OnSeatPlanLinkChanging(value);
                ReportPropertyChanging("SeatPlanLink");
                _SeatPlanLink = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SeatPlanLink");
                OnSeatPlanLinkChanged();
            }
        }
        private global::System.String _SeatPlanLink;
        partial void OnSeatPlanLinkChanging(global::System.String value);
        partial void OnSeatPlanLinkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsEnable
        {
            get
            {
                return _IsEnable;
            }
            set
            {
                OnIsEnableChanging(value);
                ReportPropertyChanging("IsEnable");
                _IsEnable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsEnable");
                OnIsEnableChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsEnable;
        partial void OnIsEnableChanging(Nullable<global::System.Boolean> value);
        partial void OnIsEnableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedDate
        {
            get
            {
                return _UpdatedDate;
            }
            set
            {
                OnUpdatedDateChanging(value);
                ReportPropertyChanging("UpdatedDate");
                _UpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedDate");
                OnUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedDate;
        partial void OnUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Session
        {
            get
            {
                return _Session;
            }
            set
            {
                OnSessionChanging(value);
                ReportPropertyChanging("Session");
                _Session = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Session");
                OnSessionChanged();
            }
        }
        private global::System.String _Session;
        partial void OnSessionChanging(global::System.String value);
        partial void OnSessionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CourseType
        {
            get
            {
                return _CourseType;
            }
            set
            {
                OnCourseTypeChanging(value);
                ReportPropertyChanging("CourseType");
                _CourseType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CourseType");
                OnCourseTypeChanged();
            }
        }
        private global::System.String _CourseType;
        partial void OnCourseTypeChanging(global::System.String value);
        partial void OnCourseTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AdmissionReq
        {
            get
            {
                return _AdmissionReq;
            }
            set
            {
                OnAdmissionReqChanging(value);
                ReportPropertyChanging("AdmissionReq");
                _AdmissionReq = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AdmissionReq");
                OnAdmissionReqChanged();
            }
        }
        private global::System.String _AdmissionReq;
        partial void OnAdmissionReqChanging(global::System.String value);
        partial void OnAdmissionReqChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ApplyProc
        {
            get
            {
                return _ApplyProc;
            }
            set
            {
                OnApplyProcChanging(value);
                ReportPropertyChanging("ApplyProc");
                _ApplyProc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ApplyProc");
                OnApplyProcChanged();
            }
        }
        private global::System.String _ApplyProc;
        partial void OnApplyProcChanging(global::System.String value);
        partial void OnApplyProcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AppStart
        {
            get
            {
                return _AppStart;
            }
            set
            {
                OnAppStartChanging(value);
                ReportPropertyChanging("AppStart");
                _AppStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AppStart");
                OnAppStartChanged();
            }
        }
        private Nullable<global::System.DateTime> _AppStart;
        partial void OnAppStartChanging(Nullable<global::System.DateTime> value);
        partial void OnAppStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AppEnd
        {
            get
            {
                return _AppEnd;
            }
            set
            {
                OnAppEndChanging(value);
                ReportPropertyChanging("AppEnd");
                _AppEnd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AppEnd");
                OnAppEndChanged();
            }
        }
        private Nullable<global::System.DateTime> _AppEnd;
        partial void OnAppEndChanging(Nullable<global::System.DateTime> value);
        partial void OnAppEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> SubStart
        {
            get
            {
                return _SubStart;
            }
            set
            {
                OnSubStartChanging(value);
                ReportPropertyChanging("SubStart");
                _SubStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubStart");
                OnSubStartChanged();
            }
        }
        private Nullable<global::System.DateTime> _SubStart;
        partial void OnSubStartChanging(Nullable<global::System.DateTime> value);
        partial void OnSubStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> SubEnd
        {
            get
            {
                return _SubEnd;
            }
            set
            {
                OnSubEndChanging(value);
                ReportPropertyChanging("SubEnd");
                _SubEnd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubEnd");
                OnSubEndChanged();
            }
        }
        private Nullable<global::System.DateTime> _SubEnd;
        partial void OnSubEndChanging(Nullable<global::System.DateTime> value);
        partial void OnSubEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EligibleCanDate
        {
            get
            {
                return _EligibleCanDate;
            }
            set
            {
                OnEligibleCanDateChanging(value);
                ReportPropertyChanging("EligibleCanDate");
                _EligibleCanDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EligibleCanDate");
                OnEligibleCanDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EligibleCanDate;
        partial void OnEligibleCanDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEligibleCanDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AddDate
        {
            get
            {
                return _AddDate;
            }
            set
            {
                OnAddDateChanging(value);
                ReportPropertyChanging("AddDate");
                _AddDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddDate");
                OnAddDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _AddDate;
        partial void OnAddDateChanging(Nullable<global::System.DateTime> value);
        partial void OnAddDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ResDate
        {
            get
            {
                return _ResDate;
            }
            set
            {
                OnResDateChanging(value);
                ReportPropertyChanging("ResDate");
                _ResDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResDate");
                OnResDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ResDate;
        partial void OnResDateChanging(Nullable<global::System.DateTime> value);
        partial void OnResDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AdmissionTypeId
        {
            get
            {
                return _AdmissionTypeId;
            }
            set
            {
                OnAdmissionTypeIdChanging(value);
                ReportPropertyChanging("AdmissionTypeId");
                _AdmissionTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdmissionTypeId");
                OnAdmissionTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _AdmissionTypeId;
        partial void OnAdmissionTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnAdmissionTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdmissionDbModel", "FK_AdmissionTypeCircular", "AdmissionTypes")]
        public AdmissionType AdmissionType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmissionType>("AdmissionDbModel.FK_AdmissionTypeCircular", "AdmissionTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmissionType>("AdmissionDbModel.FK_AdmissionTypeCircular", "AdmissionTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AdmissionType> AdmissionTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmissionType>("AdmissionDbModel.FK_AdmissionTypeCircular", "AdmissionTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AdmissionType>("AdmissionDbModel.FK_AdmissionTypeCircular", "AdmissionTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdmissionDbModel", "FK_CircularComment", "Comments")]
        public EntityCollection<Comment> Comments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Comment>("AdmissionDbModel.FK_CircularComment", "Comments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Comment>("AdmissionDbModel.FK_CircularComment", "Comments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdmissionDbModel", "FK_CircularSubject", "Subjects")]
        public EntityCollection<Subject> Subjects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Subject>("AdmissionDbModel.FK_CircularSubject", "Subjects");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Subject>("AdmissionDbModel.FK_CircularSubject", "Subjects", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdmissionDbModel", "FK_InstituteCircular", "Institutes")]
        public Institute Institute
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institute>("AdmissionDbModel.FK_InstituteCircular", "Institutes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institute>("AdmissionDbModel.FK_InstituteCircular", "Institutes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Institute> InstituteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institute>("AdmissionDbModel.FK_InstituteCircular", "Institutes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Institute>("AdmissionDbModel.FK_InstituteCircular", "Institutes", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AdmissionDbModel", Name="Comment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Comment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Comment object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="circularId">Initial value of the CircularId property.</param>
        /// <param name="isEnable">Initial value of the IsEnable property.</param>
        public static Comment CreateComment(global::System.Int32 id, global::System.Int32 circularId, global::System.Boolean isEnable)
        {
            Comment comment = new Comment();
            comment.Id = id;
            comment.CircularId = circularId;
            comment.IsEnable = isEnable;
            return comment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InstituteId
        {
            get
            {
                return _InstituteId;
            }
            set
            {
                OnInstituteIdChanging(value);
                ReportPropertyChanging("InstituteId");
                _InstituteId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstituteId");
                OnInstituteIdChanged();
            }
        }
        private Nullable<global::System.Int32> _InstituteId;
        partial void OnInstituteIdChanging(Nullable<global::System.Int32> value);
        partial void OnInstituteIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CommentText
        {
            get
            {
                return _CommentText;
            }
            set
            {
                OnCommentTextChanging(value);
                ReportPropertyChanging("CommentText");
                _CommentText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CommentText");
                OnCommentTextChanged();
            }
        }
        private global::System.String _CommentText;
        partial void OnCommentTextChanging(global::System.String value);
        partial void OnCommentTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CircularId
        {
            get
            {
                return _CircularId;
            }
            set
            {
                OnCircularIdChanging(value);
                ReportPropertyChanging("CircularId");
                _CircularId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CircularId");
                OnCircularIdChanged();
            }
        }
        private global::System.Int32 _CircularId;
        partial void OnCircularIdChanging(global::System.Int32 value);
        partial void OnCircularIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsEnable
        {
            get
            {
                return _IsEnable;
            }
            set
            {
                OnIsEnableChanging(value);
                ReportPropertyChanging("IsEnable");
                _IsEnable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsEnable");
                OnIsEnableChanged();
            }
        }
        private global::System.Boolean _IsEnable;
        partial void OnIsEnableChanging(global::System.Boolean value);
        partial void OnIsEnableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedDate
        {
            get
            {
                return _UpdatedDate;
            }
            set
            {
                OnUpdatedDateChanging(value);
                ReportPropertyChanging("UpdatedDate");
                _UpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedDate");
                OnUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedDate;
        partial void OnUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdmissionDbModel", "FK_CircularComment", "Circulars")]
        public Circular Circular
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Circular>("AdmissionDbModel.FK_CircularComment", "Circulars").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Circular>("AdmissionDbModel.FK_CircularComment", "Circulars").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Circular> CircularReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Circular>("AdmissionDbModel.FK_CircularComment", "Circulars");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Circular>("AdmissionDbModel.FK_CircularComment", "Circulars", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdmissionDbModel", "FK_InstituteComment", "Institutes")]
        public Institute Institute
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institute>("AdmissionDbModel.FK_InstituteComment", "Institutes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institute>("AdmissionDbModel.FK_InstituteComment", "Institutes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Institute> InstituteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institute>("AdmissionDbModel.FK_InstituteComment", "Institutes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Institute>("AdmissionDbModel.FK_InstituteComment", "Institutes", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AdmissionDbModel", Name="Country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Country : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Country object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isEnable">Initial value of the IsEnable property.</param>
        public static Country CreateCountry(global::System.Int32 id, global::System.String name, global::System.Boolean isEnable)
        {
            Country country = new Country();
            country.Id = id;
            country.Name = name;
            country.IsEnable = isEnable;
            return country;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsEnable
        {
            get
            {
                return _IsEnable;
            }
            set
            {
                OnIsEnableChanging(value);
                ReportPropertyChanging("IsEnable");
                _IsEnable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsEnable");
                OnIsEnableChanged();
            }
        }
        private global::System.Boolean _IsEnable;
        partial void OnIsEnableChanging(global::System.Boolean value);
        partial void OnIsEnableChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdmissionDbModel", "FK_CountryInstitute", "Institutes")]
        public EntityCollection<Institute> Institutes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Institute>("AdmissionDbModel.FK_CountryInstitute", "Institutes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Institute>("AdmissionDbModel.FK_CountryInstitute", "Institutes", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AdmissionDbModel", Name="Institute")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Institute : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Institute object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="instituteSubcataryId">Initial value of the InstituteSubcataryId property.</param>
        public static Institute CreateInstitute(global::System.Int32 id, global::System.String title, global::System.Int32 instituteSubcataryId)
        {
            Institute institute = new Institute();
            institute.Id = id;
            institute.Title = title;
            institute.InstituteSubcataryId = instituteSubcataryId;
            return institute;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstituteSubcataryId
        {
            get
            {
                return _InstituteSubcataryId;
            }
            set
            {
                OnInstituteSubcataryIdChanging(value);
                ReportPropertyChanging("InstituteSubcataryId");
                _InstituteSubcataryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstituteSubcataryId");
                OnInstituteSubcataryIdChanged();
            }
        }
        private global::System.Int32 _InstituteSubcataryId;
        partial void OnInstituteSubcataryIdChanging(global::System.Int32 value);
        partial void OnInstituteSubcataryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CountryId
        {
            get
            {
                return _CountryId;
            }
            set
            {
                OnCountryIdChanging(value);
                ReportPropertyChanging("CountryId");
                _CountryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryId");
                OnCountryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CountryId;
        partial void OnCountryIdChanging(Nullable<global::System.Int32> value);
        partial void OnCountryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsEnable
        {
            get
            {
                return _IsEnable;
            }
            set
            {
                OnIsEnableChanging(value);
                ReportPropertyChanging("IsEnable");
                _IsEnable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsEnable");
                OnIsEnableChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsEnable;
        partial void OnIsEnableChanging(Nullable<global::System.Boolean> value);
        partial void OnIsEnableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedDate
        {
            get
            {
                return _UpdatedDate;
            }
            set
            {
                OnUpdatedDateChanging(value);
                ReportPropertyChanging("UpdatedDate");
                _UpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedDate");
                OnUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedDate;
        partial void OnUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmailAddress
        {
            get
            {
                return _EmailAddress;
            }
            set
            {
                OnEmailAddressChanging(value);
                ReportPropertyChanging("EmailAddress");
                _EmailAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmailAddress");
                OnEmailAddressChanged();
            }
        }
        private global::System.String _EmailAddress;
        partial void OnEmailAddressChanging(global::System.String value);
        partial void OnEmailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WebSite
        {
            get
            {
                return _WebSite;
            }
            set
            {
                OnWebSiteChanging(value);
                ReportPropertyChanging("WebSite");
                _WebSite = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WebSite");
                OnWebSiteChanged();
            }
        }
        private global::System.String _WebSite;
        partial void OnWebSiteChanging(global::System.String value);
        partial void OnWebSiteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EstablishDate
        {
            get
            {
                return _EstablishDate;
            }
            set
            {
                OnEstablishDateChanging(value);
                ReportPropertyChanging("EstablishDate");
                _EstablishDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstablishDate");
                OnEstablishDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EstablishDate;
        partial void OnEstablishDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEstablishDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LoDirectory
        {
            get
            {
                return _LoDirectory;
            }
            set
            {
                OnLoDirectoryChanging(value);
                ReportPropertyChanging("LoDirectory");
                _LoDirectory = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LoDirectory");
                OnLoDirectoryChanged();
            }
        }
        private global::System.String _LoDirectory;
        partial void OnLoDirectoryChanging(global::System.String value);
        partial void OnLoDirectoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NoOfMaleStd
        {
            get
            {
                return _NoOfMaleStd;
            }
            set
            {
                OnNoOfMaleStdChanging(value);
                ReportPropertyChanging("NoOfMaleStd");
                _NoOfMaleStd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NoOfMaleStd");
                OnNoOfMaleStdChanged();
            }
        }
        private Nullable<global::System.Int32> _NoOfMaleStd;
        partial void OnNoOfMaleStdChanging(Nullable<global::System.Int32> value);
        partial void OnNoOfMaleStdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NoOfFemaleStd
        {
            get
            {
                return _NoOfFemaleStd;
            }
            set
            {
                OnNoOfFemaleStdChanging(value);
                ReportPropertyChanging("NoOfFemaleStd");
                _NoOfFemaleStd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NoOfFemaleStd");
                OnNoOfFemaleStdChanged();
            }
        }
        private Nullable<global::System.Int32> _NoOfFemaleStd;
        partial void OnNoOfFemaleStdChanging(Nullable<global::System.Int32> value);
        partial void OnNoOfFemaleStdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NoOfTeacher
        {
            get
            {
                return _NoOfTeacher;
            }
            set
            {
                OnNoOfTeacherChanging(value);
                ReportPropertyChanging("NoOfTeacher");
                _NoOfTeacher = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NoOfTeacher");
                OnNoOfTeacherChanged();
            }
        }
        private Nullable<global::System.Int32> _NoOfTeacher;
        partial void OnNoOfTeacherChanging(Nullable<global::System.Int32> value);
        partial void OnNoOfTeacherChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NoOfMaleHostelSit
        {
            get
            {
                return _NoOfMaleHostelSit;
            }
            set
            {
                OnNoOfMaleHostelSitChanging(value);
                ReportPropertyChanging("NoOfMaleHostelSit");
                _NoOfMaleHostelSit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NoOfMaleHostelSit");
                OnNoOfMaleHostelSitChanged();
            }
        }
        private Nullable<global::System.Int32> _NoOfMaleHostelSit;
        partial void OnNoOfMaleHostelSitChanging(Nullable<global::System.Int32> value);
        partial void OnNoOfMaleHostelSitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NoOfFemaleHostelSit
        {
            get
            {
                return _NoOfFemaleHostelSit;
            }
            set
            {
                OnNoOfFemaleHostelSitChanging(value);
                ReportPropertyChanging("NoOfFemaleHostelSit");
                _NoOfFemaleHostelSit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NoOfFemaleHostelSit");
                OnNoOfFemaleHostelSitChanged();
            }
        }
        private Nullable<global::System.Int32> _NoOfFemaleHostelSit;
        partial void OnNoOfFemaleHostelSitChanging(Nullable<global::System.Int32> value);
        partial void OnNoOfFemaleHostelSitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdmissionDbModel", "FK_InstituteCircular", "Circulars")]
        public EntityCollection<Circular> Circulars
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Circular>("AdmissionDbModel.FK_InstituteCircular", "Circulars");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Circular>("AdmissionDbModel.FK_InstituteCircular", "Circulars", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdmissionDbModel", "FK_InstituteComment", "Comments")]
        public EntityCollection<Comment> Comments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Comment>("AdmissionDbModel.FK_InstituteComment", "Comments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Comment>("AdmissionDbModel.FK_InstituteComment", "Comments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdmissionDbModel", "FK_CountryInstitute", "Countries")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("AdmissionDbModel.FK_CountryInstitute", "Countries").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("AdmissionDbModel.FK_CountryInstitute", "Countries").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("AdmissionDbModel.FK_CountryInstitute", "Countries");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("AdmissionDbModel.FK_CountryInstitute", "Countries", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdmissionDbModel", "FK_InstituteNews", "News")]
        public EntityCollection<News> News
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<News>("AdmissionDbModel.FK_InstituteNews", "News");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<News>("AdmissionDbModel.FK_InstituteNews", "News", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdmissionDbModel", "FK_InstituteNotice", "Notices")]
        public EntityCollection<Notice> Notices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Notice>("AdmissionDbModel.FK_InstituteNotice", "Notices");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Notice>("AdmissionDbModel.FK_InstituteNotice", "Notices", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdmissionDbModel", "FK_InstituteSubcataryInstitute", "InstituteSubcataries")]
        public InstituteSubcatary InstituteSubcatary
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstituteSubcatary>("AdmissionDbModel.FK_InstituteSubcataryInstitute", "InstituteSubcataries").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstituteSubcatary>("AdmissionDbModel.FK_InstituteSubcataryInstitute", "InstituteSubcataries").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InstituteSubcatary> InstituteSubcataryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstituteSubcatary>("AdmissionDbModel.FK_InstituteSubcataryInstitute", "InstituteSubcataries");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InstituteSubcatary>("AdmissionDbModel.FK_InstituteSubcataryInstitute", "InstituteSubcataries", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AdmissionDbModel", Name="InstituteCatary")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InstituteCatary : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InstituteCatary object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="instituteTypeId">Initial value of the InstituteTypeId property.</param>
        public static InstituteCatary CreateInstituteCatary(global::System.Int32 id, global::System.String title, global::System.Int32 instituteTypeId)
        {
            InstituteCatary instituteCatary = new InstituteCatary();
            instituteCatary.Id = id;
            instituteCatary.Title = title;
            instituteCatary.InstituteTypeId = instituteTypeId;
            return instituteCatary;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstituteTypeId
        {
            get
            {
                return _InstituteTypeId;
            }
            set
            {
                OnInstituteTypeIdChanging(value);
                ReportPropertyChanging("InstituteTypeId");
                _InstituteTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstituteTypeId");
                OnInstituteTypeIdChanged();
            }
        }
        private global::System.Int32 _InstituteTypeId;
        partial void OnInstituteTypeIdChanging(global::System.Int32 value);
        partial void OnInstituteTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsEnable
        {
            get
            {
                return _IsEnable;
            }
            set
            {
                OnIsEnableChanging(value);
                ReportPropertyChanging("IsEnable");
                _IsEnable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsEnable");
                OnIsEnableChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsEnable;
        partial void OnIsEnableChanging(Nullable<global::System.Boolean> value);
        partial void OnIsEnableChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdmissionDbModel", "FK_InstituteCataryInstituteSubcatary", "InstituteSubcataries")]
        public EntityCollection<InstituteSubcatary> InstituteSubcataries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InstituteSubcatary>("AdmissionDbModel.FK_InstituteCataryInstituteSubcatary", "InstituteSubcataries");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InstituteSubcatary>("AdmissionDbModel.FK_InstituteCataryInstituteSubcatary", "InstituteSubcataries", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdmissionDbModel", "FK_InstituteTypeInstituteCatary", "InstituteTypes")]
        public InstituteType InstituteType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstituteType>("AdmissionDbModel.FK_InstituteTypeInstituteCatary", "InstituteTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstituteType>("AdmissionDbModel.FK_InstituteTypeInstituteCatary", "InstituteTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InstituteType> InstituteTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstituteType>("AdmissionDbModel.FK_InstituteTypeInstituteCatary", "InstituteTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InstituteType>("AdmissionDbModel.FK_InstituteTypeInstituteCatary", "InstituteTypes", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AdmissionDbModel", Name="InstituteSubcatary")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InstituteSubcatary : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InstituteSubcatary object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="instituteCataryId">Initial value of the InstituteCataryId property.</param>
        public static InstituteSubcatary CreateInstituteSubcatary(global::System.Int32 id, global::System.String title, global::System.Int32 instituteCataryId)
        {
            InstituteSubcatary instituteSubcatary = new InstituteSubcatary();
            instituteSubcatary.Id = id;
            instituteSubcatary.Title = title;
            instituteSubcatary.InstituteCataryId = instituteCataryId;
            return instituteSubcatary;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstituteCataryId
        {
            get
            {
                return _InstituteCataryId;
            }
            set
            {
                OnInstituteCataryIdChanging(value);
                ReportPropertyChanging("InstituteCataryId");
                _InstituteCataryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstituteCataryId");
                OnInstituteCataryIdChanged();
            }
        }
        private global::System.Int32 _InstituteCataryId;
        partial void OnInstituteCataryIdChanging(global::System.Int32 value);
        partial void OnInstituteCataryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsEnable
        {
            get
            {
                return _IsEnable;
            }
            set
            {
                OnIsEnableChanging(value);
                ReportPropertyChanging("IsEnable");
                _IsEnable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsEnable");
                OnIsEnableChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsEnable;
        partial void OnIsEnableChanging(Nullable<global::System.Boolean> value);
        partial void OnIsEnableChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdmissionDbModel", "FK_InstituteCataryInstituteSubcatary", "InstituteCataries")]
        public InstituteCatary InstituteCatary
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstituteCatary>("AdmissionDbModel.FK_InstituteCataryInstituteSubcatary", "InstituteCataries").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstituteCatary>("AdmissionDbModel.FK_InstituteCataryInstituteSubcatary", "InstituteCataries").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InstituteCatary> InstituteCataryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstituteCatary>("AdmissionDbModel.FK_InstituteCataryInstituteSubcatary", "InstituteCataries");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InstituteCatary>("AdmissionDbModel.FK_InstituteCataryInstituteSubcatary", "InstituteCataries", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdmissionDbModel", "FK_InstituteSubcataryInstitute", "Institutes")]
        public EntityCollection<Institute> Institutes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Institute>("AdmissionDbModel.FK_InstituteSubcataryInstitute", "Institutes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Institute>("AdmissionDbModel.FK_InstituteSubcataryInstitute", "Institutes", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AdmissionDbModel", Name="InstituteType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InstituteType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InstituteType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        public static InstituteType CreateInstituteType(global::System.Int32 id, global::System.String title)
        {
            InstituteType instituteType = new InstituteType();
            instituteType.Id = id;
            instituteType.Title = title;
            return instituteType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsEnable
        {
            get
            {
                return _IsEnable;
            }
            set
            {
                OnIsEnableChanging(value);
                ReportPropertyChanging("IsEnable");
                _IsEnable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsEnable");
                OnIsEnableChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsEnable;
        partial void OnIsEnableChanging(Nullable<global::System.Boolean> value);
        partial void OnIsEnableChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdmissionDbModel", "FK_InstituteTypeInstituteCatary", "InstituteCataries")]
        public EntityCollection<InstituteCatary> InstituteCataries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InstituteCatary>("AdmissionDbModel.FK_InstituteTypeInstituteCatary", "InstituteCataries");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InstituteCatary>("AdmissionDbModel.FK_InstituteTypeInstituteCatary", "InstituteCataries", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AdmissionDbModel", Name="News")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class News : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new News object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="instituteId">Initial value of the InstituteId property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static News CreateNews(global::System.Int32 id, global::System.String title, global::System.Int32 instituteId, global::System.String description)
        {
            News news = new News();
            news.Id = id;
            news.Title = title;
            news.InstituteId = instituteId;
            news.Description = description;
            return news;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstituteId
        {
            get
            {
                return _InstituteId;
            }
            set
            {
                OnInstituteIdChanging(value);
                ReportPropertyChanging("InstituteId");
                _InstituteId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstituteId");
                OnInstituteIdChanged();
            }
        }
        private global::System.Int32 _InstituteId;
        partial void OnInstituteIdChanging(global::System.Int32 value);
        partial void OnInstituteIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedDate
        {
            get
            {
                return _UpdatedDate;
            }
            set
            {
                OnUpdatedDateChanging(value);
                ReportPropertyChanging("UpdatedDate");
                _UpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedDate");
                OnUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedDate;
        partial void OnUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdmissionDbModel", "FK_InstituteNews", "Institutes")]
        public Institute Institute
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institute>("AdmissionDbModel.FK_InstituteNews", "Institutes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institute>("AdmissionDbModel.FK_InstituteNews", "Institutes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Institute> InstituteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institute>("AdmissionDbModel.FK_InstituteNews", "Institutes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Institute>("AdmissionDbModel.FK_InstituteNews", "Institutes", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AdmissionDbModel", Name="Notice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Notice : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Notice object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="instituteId">Initial value of the InstituteId property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static Notice CreateNotice(global::System.Int32 id, global::System.String title, global::System.Int32 instituteId, global::System.String description)
        {
            Notice notice = new Notice();
            notice.Id = id;
            notice.Title = title;
            notice.InstituteId = instituteId;
            notice.Description = description;
            return notice;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstituteId
        {
            get
            {
                return _InstituteId;
            }
            set
            {
                OnInstituteIdChanging(value);
                ReportPropertyChanging("InstituteId");
                _InstituteId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstituteId");
                OnInstituteIdChanged();
            }
        }
        private global::System.Int32 _InstituteId;
        partial void OnInstituteIdChanging(global::System.Int32 value);
        partial void OnInstituteIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdmissionDbModel", "FK_InstituteNotice", "Institutes")]
        public Institute Institute
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institute>("AdmissionDbModel.FK_InstituteNotice", "Institutes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institute>("AdmissionDbModel.FK_InstituteNotice", "Institutes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Institute> InstituteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institute>("AdmissionDbModel.FK_InstituteNotice", "Institutes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Institute>("AdmissionDbModel.FK_InstituteNotice", "Institutes", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AdmissionDbModel", Name="Subject")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Subject : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Subject object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="circularId">Initial value of the CircularId property.</param>
        /// <param name="isEnable">Initial value of the IsEnable property.</param>
        public static Subject CreateSubject(global::System.Int32 id, global::System.Int32 circularId, global::System.Boolean isEnable)
        {
            Subject subject = new Subject();
            subject.Id = id;
            subject.CircularId = circularId;
            subject.IsEnable = isEnable;
            return subject;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CircularId
        {
            get
            {
                return _CircularId;
            }
            set
            {
                OnCircularIdChanging(value);
                ReportPropertyChanging("CircularId");
                _CircularId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CircularId");
                OnCircularIdChanged();
            }
        }
        private global::System.Int32 _CircularId;
        partial void OnCircularIdChanging(global::System.Int32 value);
        partial void OnCircularIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsEnable
        {
            get
            {
                return _IsEnable;
            }
            set
            {
                OnIsEnableChanging(value);
                ReportPropertyChanging("IsEnable");
                _IsEnable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsEnable");
                OnIsEnableChanged();
            }
        }
        private global::System.Boolean _IsEnable;
        partial void OnIsEnableChanging(global::System.Boolean value);
        partial void OnIsEnableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedDate
        {
            get
            {
                return _UpdatedDate;
            }
            set
            {
                OnUpdatedDateChanging(value);
                ReportPropertyChanging("UpdatedDate");
                _UpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedDate");
                OnUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedDate;
        partial void OnUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Credit
        {
            get
            {
                return _Credit;
            }
            set
            {
                OnCreditChanging(value);
                ReportPropertyChanging("Credit");
                _Credit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Credit");
                OnCreditChanged();
            }
        }
        private Nullable<global::System.Int32> _Credit;
        partial void OnCreditChanging(Nullable<global::System.Int32> value);
        partial void OnCreditChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DurationInMnth
        {
            get
            {
                return _DurationInMnth;
            }
            set
            {
                OnDurationInMnthChanging(value);
                ReportPropertyChanging("DurationInMnth");
                _DurationInMnth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DurationInMnth");
                OnDurationInMnthChanged();
            }
        }
        private Nullable<global::System.Int32> _DurationInMnth;
        partial void OnDurationInMnthChanging(Nullable<global::System.Int32> value);
        partial void OnDurationInMnthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NoOfTeacher
        {
            get
            {
                return _NoOfTeacher;
            }
            set
            {
                OnNoOfTeacherChanging(value);
                ReportPropertyChanging("NoOfTeacher");
                _NoOfTeacher = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NoOfTeacher");
                OnNoOfTeacherChanged();
            }
        }
        private Nullable<global::System.Int32> _NoOfTeacher;
        partial void OnNoOfTeacherChanging(Nullable<global::System.Int32> value);
        partial void OnNoOfTeacherChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NoOfMaleStudent
        {
            get
            {
                return _NoOfMaleStudent;
            }
            set
            {
                OnNoOfMaleStudentChanging(value);
                ReportPropertyChanging("NoOfMaleStudent");
                _NoOfMaleStudent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NoOfMaleStudent");
                OnNoOfMaleStudentChanged();
            }
        }
        private Nullable<global::System.Int32> _NoOfMaleStudent;
        partial void OnNoOfMaleStudentChanging(Nullable<global::System.Int32> value);
        partial void OnNoOfMaleStudentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NoOfFemaleStudent
        {
            get
            {
                return _NoOfFemaleStudent;
            }
            set
            {
                OnNoOfFemaleStudentChanging(value);
                ReportPropertyChanging("NoOfFemaleStudent");
                _NoOfFemaleStudent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NoOfFemaleStudent");
                OnNoOfFemaleStudentChanged();
            }
        }
        private Nullable<global::System.Int32> _NoOfFemaleStudent;
        partial void OnNoOfFemaleStudentChanging(Nullable<global::System.Int32> value);
        partial void OnNoOfFemaleStudentChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdmissionDbModel", "FK_CircularSubject", "Circulars")]
        public Circular Circular
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Circular>("AdmissionDbModel.FK_CircularSubject", "Circulars").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Circular>("AdmissionDbModel.FK_CircularSubject", "Circulars").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Circular> CircularReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Circular>("AdmissionDbModel.FK_CircularSubject", "Circulars");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Circular>("AdmissionDbModel.FK_CircularSubject", "Circulars", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AdmissionDbModel", Name="sysdiagram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagram : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagram object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagram Createsysdiagram(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagram sysdiagram = new sysdiagram();
            sysdiagram.name = name;
            sysdiagram.principal_id = principal_id;
            sysdiagram.diagram_id = diagram_id;
            return sysdiagram;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    
    }

    #endregion

    
}
