//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data.Common;
using System.Data.EntityClient;
using System.Data.Metadata.Edm;
using System.Data.Objects.DataClasses;
using System.Data.Objects;
using System.Data;
using System.Diagnostics;
using System.Globalization;
using System.Linq;

namespace EduEnginee.Areas.Admission.Models
{
    public partial class AdmissionDbEntities : ObjectContext
    {
        public const string ConnectionString = "name=AdmissionDbEntities";
        public const string ContainerName = "AdmissionDbEntities";
    
        #region Constructors
    
        public AdmissionDbEntities()
            : base(ConnectionString, ContainerName)
        {
            Initialize();
        }
    
        public AdmissionDbEntities(string connectionString)
            : base(connectionString, ContainerName)
        {
            Initialize();
        }
    
        public AdmissionDbEntities(EntityConnection connection)
            : base(connection, ContainerName)
        {
            Initialize();
        }
    
        private void Initialize()
        {
            // Creating proxies requires the use of the ProxyDataContractResolver and
            // may allow lazy loading which can expand the loaded graph during serialization.
            ContextOptions.ProxyCreationEnabled = false;
            ObjectMaterialized += new ObjectMaterializedEventHandler(HandleObjectMaterialized);
        }
    
        private void HandleObjectMaterialized(object sender, ObjectMaterializedEventArgs e)
        {
            var entity = e.Entity as IObjectWithChangeTracker;
            if (entity != null)
            {
                bool changeTrackingEnabled = entity.ChangeTracker.ChangeTrackingEnabled;
                try
                {
                    entity.MarkAsUnchanged();
                }
                finally
                {
                    entity.ChangeTracker.ChangeTrackingEnabled = changeTrackingEnabled;
                }
                this.StoreReferenceKeyValues(entity);
            }
        }
    
        #endregion
    
        #region ObjectSet Properties
    
        public ObjectSet<AdmissionType> AdmissionTypes
        {
            get { return _admissionTypes  ?? (_admissionTypes = CreateObjectSet<AdmissionType>("AdmissionTypes")); }
        }
        private ObjectSet<AdmissionType> _admissionTypes;
    
        public ObjectSet<Circular> Circulars
        {
            get { return _circulars  ?? (_circulars = CreateObjectSet<Circular>("Circulars")); }
        }
        private ObjectSet<Circular> _circulars;
    
        public ObjectSet<Comment> Comments
        {
            get { return _comments  ?? (_comments = CreateObjectSet<Comment>("Comments")); }
        }
        private ObjectSet<Comment> _comments;
    
        public ObjectSet<Country> Countries
        {
            get { return _countries  ?? (_countries = CreateObjectSet<Country>("Countries")); }
        }
        private ObjectSet<Country> _countries;
    
        public ObjectSet<InstituteCatary> InstituteCataries
        {
            get { return _instituteCataries  ?? (_instituteCataries = CreateObjectSet<InstituteCatary>("InstituteCataries")); }
        }
        private ObjectSet<InstituteCatary> _instituteCataries;
    
        public ObjectSet<Institute> Institutes
        {
            get { return _institutes  ?? (_institutes = CreateObjectSet<Institute>("Institutes")); }
        }
        private ObjectSet<Institute> _institutes;
    
        public ObjectSet<InstituteSubcatary> InstituteSubcataries
        {
            get { return _instituteSubcataries  ?? (_instituteSubcataries = CreateObjectSet<InstituteSubcatary>("InstituteSubcataries")); }
        }
        private ObjectSet<InstituteSubcatary> _instituteSubcataries;
    
        public ObjectSet<InstituteType> InstituteTypes
        {
            get { return _instituteTypes  ?? (_instituteTypes = CreateObjectSet<InstituteType>("InstituteTypes")); }
        }
        private ObjectSet<InstituteType> _instituteTypes;
    
        public ObjectSet<News> News
        {
            get { return _news  ?? (_news = CreateObjectSet<News>("News")); }
        }
        private ObjectSet<News> _news;
    
        public ObjectSet<Notice> Notices
        {
            get { return _notices  ?? (_notices = CreateObjectSet<Notice>("Notices")); }
        }
        private ObjectSet<Notice> _notices;
    
        public ObjectSet<Subject> Subjects
        {
            get { return _subjects  ?? (_subjects = CreateObjectSet<Subject>("Subjects")); }
        }
        private ObjectSet<Subject> _subjects;
    
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get { return _sysdiagrams  ?? (_sysdiagrams = CreateObjectSet<sysdiagram>("sysdiagrams")); }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;

        #endregion

    }
}
