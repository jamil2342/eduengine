//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Admission", "InstituteTypeInstituteCatagory", "InstituteType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduEnginee.Areas.Temp.Models.InstituteType), "InstituteCatagory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduEnginee.Areas.Temp.Models.InstituteCatagory), true)]
[assembly: EdmRelationshipAttribute("Admission", "InstituteCatagoryInstitute", "InstituteCatagory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduEnginee.Areas.Temp.Models.InstituteCatagory), "Institute", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduEnginee.Areas.Temp.Models.Institute), true)]

#endregion

namespace EduEnginee.Areas.Temp.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class AdmissionContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new AdmissionContainer object using the connection string found in the 'AdmissionContainer' section of the application configuration file.
        /// </summary>
        public AdmissionContainer() : base("name=AdmissionContainer", "AdmissionContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AdmissionContainer object.
        /// </summary>
        public AdmissionContainer(string connectionString) : base(connectionString, "AdmissionContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AdmissionContainer object.
        /// </summary>
        public AdmissionContainer(EntityConnection connection) : base(connection, "AdmissionContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InstituteType> InstituteTypes
        {
            get
            {
                if ((_InstituteTypes == null))
                {
                    _InstituteTypes = base.CreateObjectSet<InstituteType>("InstituteTypes");
                }
                return _InstituteTypes;
            }
        }
        private ObjectSet<InstituteType> _InstituteTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InstituteCatagory> InstituteCatagories
        {
            get
            {
                if ((_InstituteCatagories == null))
                {
                    _InstituteCatagories = base.CreateObjectSet<InstituteCatagory>("InstituteCatagories");
                }
                return _InstituteCatagories;
            }
        }
        private ObjectSet<InstituteCatagory> _InstituteCatagories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Institute> Institutes
        {
            get
            {
                if ((_Institutes == null))
                {
                    _Institutes = base.CreateObjectSet<Institute>("Institutes");
                }
                return _Institutes;
            }
        }
        private ObjectSet<Institute> _Institutes;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InstituteTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInstituteTypes(InstituteType instituteType)
        {
            base.AddObject("InstituteTypes", instituteType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InstituteCatagories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInstituteCatagories(InstituteCatagory instituteCatagory)
        {
            base.AddObject("InstituteCatagories", instituteCatagory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Institutes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInstitutes(Institute institute)
        {
            base.AddObject("Institutes", institute);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Admission", Name="Institute")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Institute : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Institute object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="instituteCatagoryId">Initial value of the InstituteCatagoryId property.</param>
        public static Institute CreateInstitute(global::System.Int32 id, global::System.Int32 instituteCatagoryId)
        {
            Institute institute = new Institute();
            institute.Id = id;
            institute.InstituteCatagoryId = instituteCatagoryId;
            return institute;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstituteCatagoryId
        {
            get
            {
                return _InstituteCatagoryId;
            }
            set
            {
                OnInstituteCatagoryIdChanging(value);
                ReportPropertyChanging("InstituteCatagoryId");
                _InstituteCatagoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstituteCatagoryId");
                OnInstituteCatagoryIdChanged();
            }
        }
        private global::System.Int32 _InstituteCatagoryId;
        partial void OnInstituteCatagoryIdChanging(global::System.Int32 value);
        partial void OnInstituteCatagoryIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Admission", "InstituteCatagoryInstitute", "InstituteCatagory")]
        public InstituteCatagory InstituteCatagory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstituteCatagory>("Admission.InstituteCatagoryInstitute", "InstituteCatagory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstituteCatagory>("Admission.InstituteCatagoryInstitute", "InstituteCatagory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InstituteCatagory> InstituteCatagoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstituteCatagory>("Admission.InstituteCatagoryInstitute", "InstituteCatagory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InstituteCatagory>("Admission.InstituteCatagoryInstitute", "InstituteCatagory", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Admission", Name="InstituteCatagory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InstituteCatagory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InstituteCatagory object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="instituteTypeId">Initial value of the InstituteTypeId property.</param>
        public static InstituteCatagory CreateInstituteCatagory(global::System.Int32 id, global::System.Int32 instituteTypeId)
        {
            InstituteCatagory instituteCatagory = new InstituteCatagory();
            instituteCatagory.Id = id;
            instituteCatagory.InstituteTypeId = instituteTypeId;
            return instituteCatagory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstituteTypeId
        {
            get
            {
                return _InstituteTypeId;
            }
            set
            {
                OnInstituteTypeIdChanging(value);
                ReportPropertyChanging("InstituteTypeId");
                _InstituteTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstituteTypeId");
                OnInstituteTypeIdChanged();
            }
        }
        private global::System.Int32 _InstituteTypeId;
        partial void OnInstituteTypeIdChanging(global::System.Int32 value);
        partial void OnInstituteTypeIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Admission", "InstituteTypeInstituteCatagory", "InstituteType")]
        public InstituteType InstituteType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstituteType>("Admission.InstituteTypeInstituteCatagory", "InstituteType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstituteType>("Admission.InstituteTypeInstituteCatagory", "InstituteType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InstituteType> InstituteTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstituteType>("Admission.InstituteTypeInstituteCatagory", "InstituteType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InstituteType>("Admission.InstituteTypeInstituteCatagory", "InstituteType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Admission", "InstituteCatagoryInstitute", "Institute")]
        public EntityCollection<Institute> Institutes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Institute>("Admission.InstituteCatagoryInstitute", "Institute");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Institute>("Admission.InstituteCatagoryInstitute", "Institute", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Admission", Name="InstituteType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InstituteType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InstituteType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static InstituteType CreateInstituteType(global::System.Int32 id)
        {
            InstituteType instituteType = new InstituteType();
            instituteType.Id = id;
            return instituteType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Admission", "InstituteTypeInstituteCatagory", "InstituteCatagory")]
        public EntityCollection<InstituteCatagory> InstituteCatagories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InstituteCatagory>("Admission.InstituteTypeInstituteCatagory", "InstituteCatagory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InstituteCatagory>("Admission.InstituteTypeInstituteCatagory", "InstituteCatagory", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
